//
//  WinVersion - WinVersion.cpp
//
//  Created by Adam Dann
//  Copyright (c) 2005 Nullriver Software. All rights reserved.
//

#define WIN32_LEAN_AND_MEAN
#include <windows.h>
#include <stdio.h>

#define BUFF_LEN 1024
char *buffer=0;

#define INI ".\\version.ini"

char *Get(char *var,char *def) {
	GetPrivateProfileString("Version",var,def,buffer,BUFF_LEN,INI);
	int len=(int)strlen(buffer)+1;
	char *rstr=new char[len];
	strncpy(rstr,buffer,len);
	return rstr;
}

int main() {
	int result=0;
	buffer=new char[BUFF_LEN];

	printf("== WinVersion - Nullriver Software ====\n\n");

	GetCurrentDirectory(BUFF_LEN,buffer);
	printf("Ini: %s\\version.ini\n",buffer);

	char *header=Get("Header","version.h");
	if(strlen(header)) {
		printf("Header %s\n",header);
	} else {
		printf("Header is required\n");
		result=1;
	}

	char *install=Get("Install","version.nsi");
	if(strlen(install)) printf("Install %s\n",install);
	else printf("Skipping Install\n");

	int major=GetPrivateProfileInt("Version","Major",1,INI);
	int minor=GetPrivateProfileInt("Version","Minor",0,INI);
	int release=GetPrivateProfileInt("Version","Release",0,INI);
	int build=GetPrivateProfileInt("Version","Build",0,INI)+1;

	char s_build[32];
	sprintf(s_build,"%d",build);
	WritePrivateProfileString("Version","Build",s_build,INI);

	printf("Version: %d.%d.%d.%d\n",major,minor,release,build);

	FILE *pFile;
	if(strlen(header)) {
		if(pFile=fopen(header,"w")) {
			fprintf(pFile,"#pragma once\n\n");
			fprintf(pFile,"/* Auto-generated by WinVersion - Nullriver Software - http://www.nullriver.com */\n\n");
			fprintf(pFile,"#define %s %d\n","MAJOR",major);
			fprintf(pFile,"#define %s %d\n","MINOR",minor);
			fprintf(pFile,"#define %s %d\n","RELEASE",release);
			fprintf(pFile,"#define %s %d\n","BUILD",build);
			fprintf(pFile,"#define VERSION_STRING \"%d.%d.%d.%d\"\n",major,minor,release,build);
			fclose(pFile);
			printf("Wrote to header %s\n",header);
		} else {
			printf("Failed to write to header %s\n",header);
			result=1;
		}
	}

	if(strlen(install)) {
		if(pFile=fopen(install,"w")) {
			fprintf(pFile,"; Auto-generated by WinVersion - Nullriver Software - http://www.nullriver.com\n\n");
			fprintf(pFile,"VIProductVersion %d.%d.%d.%d\n",major,minor,release,build);
			fprintf(pFile,"VIAddVersionKey \"FileVersion\" \"%d.%d.%d.%d\"\n",major,minor,release,build);
			fclose(pFile);
			printf("Wrote to installer %s\n",install);
		} else {
			printf("Failed to write to installer %s\n",install);
			result=1;
		}
	}

	delete[] header;
	delete[] install;
	delete[] buffer;

	printf("== WinVersion: Done ====\n\n");

	return result;
}
